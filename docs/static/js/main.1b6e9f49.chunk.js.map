{"version":3,"sources":["pages/NotFound.js","utils/LocationService.js","utils/user.js","utils/IconMap.js","pages/Weather.js","pages/Login.js","utils/public-route.js","utils/private-route.js","App.js","serviceWorker.js","utils/constants.js","index.js"],"names":["NotFound","react_default","a","createElement","React","Component","LocationService","getLocations","locations","localStorage","getItem","JSON","parse","getActiveLocation","name","latitude","longitude","loggedIn","logout","removeItem","setUser","user","uid","setItem","IconMap","weather_icons_react","size","Title","styled","div","_templateObject","Weather","state","location","current","icon","temperature","windSpeed","windBearing","_this2","this","axios","post","lat","lon","then","response","weather","data","currently","console","log","setState","Math","round","apparentTemperature","catch","error","className","Settings_default","NearMe_default","getIcon","Navigation_default","style","transform","concat","LoginPage","Login_templateObject","theme","createMuiTheme","palette","type","primary","main","secondary","typography","fontFamily","Login","code","nameChange","e","_this","target","value","codeChange","tryLogin","props","enqueueSnackbar","message","variant","history","push","ThemeProvider","Typography","TextField","label","onChange","margin","Button","color","onClick","display","marginTop","withSnackbar","PublicRoute","_ref","component","rest","Object","objectWithoutProperties","isLoggedIn","react_router","assign","render","PrivateRoute","to","pathname","from","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","interceptors","use","react_router_dom","private_route","path","exact","public_route","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","constants","baseUrl","defaults","baseURL","geolocation","ReactDOM","build","autoHideDuration","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b6e9f49.chunk.js","sourcesContent":["import React from \"react\";\n\nclass NotFound extends React.Component {\n\n  render() {\n\n    return (\n      <span>\n        Page not found.\n      </span>\n    );\n  }\n\n}\n\nexport default NotFound;","class LocationService {\n\n  static getLocations = () => {\n    let locations = [];\n    if (localStorage.getItem('locations')) {\n      locations = JSON.parse(localStorage.getItem('locations'));\n    }\n    return locations;\n  };\n\n  static getActiveLocation = () => {\n    return {\n      name: 'West Fargo',\n      latitude: 46.8292576,\n      longitude: -96.9092857\n    };\n  };\n\n}\n\nexport default LocationService;\n","const loggedIn = () => {\n  return (localStorage.getItem('user') && localStorage.getItem('uid'));\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('uid');\n  localStorage.removeItem('locations');\n};\n\nconst setUser = (user, uid) => {\n  localStorage.setItem('user', user);\n  localStorage.setItem('uid', uid);\n};\n\nconst getUid = () => {\n  return localStorage.getItem('uid');\n};\n\nexport {loggedIn, logout, setUser, getUid}","import React from \"react\";\nimport {WiAlien, WiDaySunny, WiFog} from \"weather-icons-react\";\n\nclass IconMap {\n\n  static getIcon(name) {\n\n    const size = 54;\n\n    switch (name) {\n      case 'clear-day':\n        return <WiDaySunny size={size}/>;\n      case 'fog':\n        return <WiFog size={size}/>;\n      default:\n        return <WiAlien/>\n    }\n  }\n\n}\n\nexport default IconMap;","import React from \"react\";\nimport \"../scss/weather.scss\";\nimport axios from \"axios\";\nimport LocationService from \"../utils/LocationService\";\nimport {getUid} from \"../utils/user\";\nimport styled from \"@emotion/styled\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport LocationIcon from \"@material-ui/icons/NearMe\";\nimport IconMap from \"../utils/IconMap\";\nimport WindIcon from \"@material-ui/icons/Navigation\";\n\nconst Title = styled.div`\n  font-size: 25px;\n  font-weight: 600;\n`;\n\nclass Weather extends React.Component {\n\n  state = {\n    location: LocationService.getActiveLocation().name,\n    current: {\n      icon: '',\n      temperature: 0,\n      windSpeed: 0,\n      windBearing: 0\n    }\n  };\n\n  componentDidMount() {\n    let location = LocationService.getActiveLocation();\n    axios\n      .post('/weather.php?uid=' + getUid(), {\n        lat: location.latitude,\n        lon: location.longitude\n      })\n      .then((response) => {\n        let weather = response.data.data;\n        let {currently} = weather;\n        console.log(weather);\n        this.setState({\n          current: {\n            icon: currently.icon,\n            temperature: Math.round(currently.apparentTemperature),\n            windSpeed: Math.round(currently.windSpeed || 0),\n            windBearing: currently.windBearing || 0,\n          }\n        });\n      })\n      .catch((error) => {\n\n      });\n  }\n\n  render() {\n    let {current} = this.state;\n\n    return (\n      <div>\n        <div className='navbar'>\n          <SettingsIcon/>\n          <LocationIcon/>\n        </div>\n        <div className='dashboard'>\n          <Title>{this.state.location}</Title>\n          <div className='conditions'>\n            <div className='temperature'>\n              {IconMap.getIcon(current.icon)}\n              <span>{current.temperature}°F</span>\n            </div>\n            <div className='wind'>\n              <WindIcon style={{transform: `rotate(${current.windBearing + 180}deg)`}}/>\n              <span>{current.windSpeed}<span className='label'>mph</span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Weather;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"@emotion/styled\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport {withSnackbar} from \"notistack\";\nimport {setUser} from \"../utils/user\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\n\nconst LoginPage = styled.div`\n  text-align: center;\n  padding-top: 25px;\n`;\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#f9f9f9'\n    },\n    secondary: {\n      main: '#f9f9f9'\n    }\n  },\n  typography: {\n    fontFamily: 'Dosis'\n  },\n});\n\nclass Login extends React.Component {\n\n  state = {\n    name: '',\n    code: ''\n  };\n\n  nameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  codeChange = (e) => {\n    this.setState({\n      code: e.target.value\n    });\n  };\n\n  tryLogin = () => {\n    axios\n      .post('/login.php', {\n        user: this.state.name,\n        code: this.state.code\n      })\n      .then((response) => {\n        console.log(response.data);\n        if (response.data.code !== 100) {\n          this.props.enqueueSnackbar(response.data.message, {\n            variant: 'error'\n          });\n        } else {\n          setUser(this.state.name, response.data.uid);\n          this.props.enqueueSnackbar('Logged in.', {\n            variant: 'success'\n          });\n          this.props.history.push('/');\n        }\n      })\n      .catch(() => {\n        this.props.enqueueSnackbar('Error logging in.', {\n          variant: 'error'\n        });\n      });\n  };\n\n  render() {\n    return (\n      <LoginPage>\n        <ThemeProvider theme={theme}>\n          <Typography variant='h5' style={{fontFamily: 'Dosis'}}>\n            Login\n          </Typography>\n          <TextField\n            label='Name'\n            value={this.state.name}\n            onChange={this.nameChange}\n            margin='dense'\n            variant='outlined'\n          />\n          <TextField\n            label='Code'\n            value={this.state.code}\n            onChange={this.codeChange}\n            margin='dense'\n            variant='outlined'\n            type='password'\n          />\n          <Button variant='outlined' color='primary' onClick={this.tryLogin}\n                  style={{display: 'block', margin: '0 auto', marginTop: '10px'}}>\n            Login\n          </Button>\n        </ThemeProvider>\n      </LoginPage>\n    );\n  }\n\n}\n\nexport default withSnackbar(Login);","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport {loggedIn} from \"./user\";\n\nconst PublicRoute = ({component: Component, ...rest}) => {\n\n  const isLoggedIn = loggedIn();\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <span>You must be logged out to view this page.</span>\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n};\n\nexport default PublicRoute","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport {loggedIn} from \"./user\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n  const isLoggedIn = loggedIn();\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React from 'react';\nimport {HashRouter} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router\";\nimport NotFound from \"./pages/NotFound\";\nimport Weather from \"./pages/Weather\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./utils/public-route\";\nimport PrivateRoute from \"./utils/private-route\";\nimport {withSnackbar} from \"notistack\";\nimport axios from \"axios\";\nimport {logout} from \"./utils/user\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    axios.interceptors.response.use(response => {\n      if (response.data.code === 202) {\n        this.props.enqueueSnackbar('Session is invalid.', {\n          variant: 'error'\n        });\n        logout();\n        return;\n      }\n      return response;\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <PrivateRoute path=\"/\" exact component={Weather}/>\n          <PublicRoute path=\"/login\" component={Login}/>\n          <Route component={NotFound}/>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default withSnackbar(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const constants = {\n  baseUrl: 'https://weather.braden.cc'\n};\n\nexport default constants;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport constants from \"./utils/constants\";\nimport axios from \"axios\";\nimport {SnackbarProvider} from \"notistack\";\n\naxios.defaults.baseURL = constants.baseUrl;\n\nif (navigator.geolocation) {\n\n  ReactDOM.render(\n    <SnackbarProvider\n      autoHideDuration={2000}\n    ><App/>\n    </SnackbarProvider>\n    , document.getElementById('root'));\n\n} else {\n\n  ReactDOM.render(<span>Device does not support Geolocation.</span>, document.getElementById('root'));\n\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}